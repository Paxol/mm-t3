name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

jobs:
  build-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm turbo db:generate

      - name: Build, lint and type-check
        run: pnpm turbo build lint type-check
        env:
          SKIP_ENV_VALIDATION: true

      - name: Check workspaces
        run: pnpm manypkg check

  build-docker-image:
    needs: build-lint
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Install openssl"
        run: sudo apt-get update -y && sudo apt-get install -y openssl

      - name: "Build Image"
        run: |
          docker build . --tag ghcr.io/paxol/mm-t3:latest
          docker push ghcr.io/paxol/mm-t3:latest
